//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace DingSDK.Models.Components
{
    using DingSDK.Models.Components;
    using DingSDK.Utils;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using System;
    
    public class AuthenticationStatusResponse
    {

        /// <summary>
        /// A unique, user-defined identifier that will be included in webhook events.
        /// </summary>
        [JsonProperty("correlation_id")]
        public string? CorrelationId { get; set; }

        [JsonProperty("created_at")]
        public DateTime? CreatedAt { get; set; }

        /// <summary>
        /// Represents a collection of events that occur during the authentication process. Each event captures specific actions and outcomes related to the authentication attempts, checks, delivery statuses, and balance updates. The array can contain different types of events, each with its own structure and properties.
        /// </summary>
        [JsonProperty("events")]
        public List<Events>? Events { get; set; }

        /// <summary>
        /// An E.164 formatted phone number.
        /// </summary>
        [JsonProperty("phone_number")]
        public string? PhoneNumber { get; set; }

        /// <summary>
        /// <a href="/guides/prevent-fraud#signals">Signals</a> are data points used to distinguish between fraudulent and legitimate users.
        /// </summary>
        [JsonProperty("signals")]
        public Signals? Signals { get; set; }

        /// <summary>
        /// The template id associated with the message content variant to be sent.
        /// </summary>
        [JsonProperty("template_id")]
        public string? TemplateId { get; set; }

        /// <summary>
        /// The UUID of the corresponding authentication.
        /// </summary>
        [JsonProperty("uuid")]
        public string? Uuid { get; set; }
    }
}