//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace DingSDK.Models.Components
{
    using DingSDK.Models.Components;
    using DingSDK.Utils;
    using Newtonsoft.Json;
    
    public class CreateAuthenticationRequest
    {

        /// <summary>
        /// The Android SMS Retriever API hash code that identifies your app. This allows you to automatically retrieve and fill the OTP code on Android devices.
        /// </summary>
        [JsonProperty("app_realm")]
        public string? AppRealm { get; set; }

        /// <summary>
        /// The version of your application.
        /// </summary>
        [JsonProperty("app_version")]
        public string? AppVersion { get; set; }

        /// <summary>
        /// A webhook URL to which delivery statuses will be sent.
        /// </summary>
        [JsonProperty("callback_url")]
        public string? CallbackUrl { get; set; }

        /// <summary>
        /// A unique, user-defined identifier that will be included in webhook events
        /// </summary>
        [JsonProperty("correlation_id")]
        public string? CorrelationId { get; set; }

        /// <summary>
        /// Your customer UUID, which can be found in the API settings in the dashboard.
        /// </summary>
        [JsonProperty("customer_uuid")]
        public string CustomerUuid { get; set; } = default!;

        /// <summary>
        /// Unique identifier for the user&apos;s device. For Android, this corresponds to the `ANDROID_ID` and for iOS, this corresponds to the `identifierForVendor`.
        /// </summary>
        [JsonProperty("device_id")]
        public string? DeviceId { get; set; }

        /// <summary>
        /// The model of the user&apos;s device.
        /// </summary>
        [JsonProperty("device_model")]
        public string? DeviceModel { get; set; }

        /// <summary>
        /// The type of device the user is using.
        /// </summary>
        [JsonProperty("device_type")]
        public DeviceType? DeviceType { get; set; }

        /// <summary>
        /// The IP address of the user&apos;s device.
        /// </summary>
        [JsonProperty("ip")]
        public string? Ip { get; set; }

        /// <summary>
        /// This signal should do more than just confirm if a user is returning to your app; it should provide a higher level of trust, indicating that the user is genuine. For more details, refer to <a href="/guides/prevent-fraud#signals">Signals</a>.
        /// </summary>
        [JsonProperty("is_returning_user")]
        public bool? IsReturningUser { get; set; }

        /// <summary>
        /// A BCP-47 locale indicating the language the SMS should be sent to; if this is not set, the SMS will be sent to the language specified by the country code of the message. If we don&apos;t support the language set, the message will be sent in US English (en-US).
        /// </summary>
        [JsonProperty("locale")]
        public string? Locale { get; set; }

        /// <summary>
        /// The version of the user&apos;s device operating system.
        /// </summary>
        [JsonProperty("os_version")]
        public string? OsVersion { get; set; }

        /// <summary>
        /// An E.164 formatted phone number to send the OTP to.
        /// </summary>
        [JsonProperty("phone_number")]
        public string PhoneNumber { get; set; } = default!;

        /// <summary>
        /// The Sender ID to use when sending the message.
        /// </summary>
        [JsonProperty("sender_id")]
        public string? SenderId { get; set; }

        /// <summary>
        /// The template id associated with the message content variant to be sent.
        /// </summary>
        [JsonProperty("template_id")]
        public string? TemplateId { get; set; }
    }
}